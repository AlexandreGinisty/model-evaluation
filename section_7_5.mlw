(*
copyright 2012 David MENTRE <d.mentre@fr.merce.mee.com>
                               -- Mitsubishi Electric R&D Centre Europe

Licensed under the EUPL V.1.1 or - as soon they will be approved by
the European Commission - subsequent versions of the EUPL (the
"Licence");
You may not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:

  http://joinup.ec.europa.eu/software/page/eupl/licence-eupl

Unless required by applicable law or agreed to in writing, software
distributed under the Licence is distributed on an "AS IS" basis,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied.

See the Licence for the specific language governing permissions and
limitations under the Licence.
*)

(* Reference: UNISIG SUBSET-026-3 v3.3.0 *)

(** Definitions of Variables *)
theory Section_7_5
  use import int.Int
  use import real.RealInfix
  use real.FromInt

  use import interval.Interval
  use import interval.IntegerConstants

  type possibly_unknown 'a = Known 'a | Unknown

  (* ยง7.5.1.48 *)
  type l_message = interval_item
  axiom l_message_range : forall i: l_message.
    in_interval (Interval.make 0 1023) i

  (* ยง7.5.1.59 *)
  type m_ack = No_acknowledgment_required | Acknowledgment_required

  (* ยง7.5.1.91 *)
  use export section_8_5.Section_8_5_2
  use export section_8_5.Section_8_5_3

  type nid_message = interval_item
  axiom nid_message_range : forall i: nid_message.
    in_interval (Interval.make 0 255) i

  (* ยง7.5.1.154 *)
  type t_train = possibly_unknown interval_item
  axiom t_train_range: forall i: t_train.
    match i with
    | Unknown -> true
    | Known v ->
        in_interval (Interval.make 0 (two_power_32_minus_one - 1)) v
    end

  function t_train_to_second (i: t_train) : possibly_unknown real =
    match i with
    | Unknown -> Unknown
    | Known v -> Known ((FromInt.from_int (to_int v)) /. 100.0)
    end
end
