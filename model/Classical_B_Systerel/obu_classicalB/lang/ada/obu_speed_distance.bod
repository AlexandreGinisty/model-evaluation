-- File obu_speed_distance.bod
-- generated by Atelier-B/tbada on Wed May 29 22:10:39 2013
-- from input_file obu_speed_distance.imp, checksum 5188fbba57dea74d53ede5f079cc8f67

-- obu_speed_distance_i
-- * Author: Marielle Petit-Doche <marielle.doche@systerel.fr> --Systerel
-- * Creation date: 13/05/13
-- 
--  * Licensed under the EUPL V.1.1 or - as soon they will be approved by
-- * the European Commission - subsequent versions of the EUPL (the
-- * "Licence");
-- * You may not use this work except in compliance with the Licence.
--
-- * You may obtain a copy of the Licence at:
-- *   http://joinup.ec.europa.eu/software/page/eupl/licence-eupl
--
-- * Unless required by applicable law or agreed to in writing, software
-- * distributed under the Licence is distributed on an "AS IS" basis,
-- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-- * implied.
--
-- * See the Licence for the specific language governing permissions and
-- * limitations under the Licence.
-- 
package body obu_speed_distance is
	
	--------------------
	-- INITIALISATION --
	--------------------
	procedure IMPORTS(this : in PTR_obu_speed_distance) is
	begin
		-- Component does not import any machine
		null ;
		-- Component does not extend any machine
		null ;
		-- Instance is not initialised
		this.initialisation := FALSE ;
	end IMPORTS ;
	-- SEES obu_types
	procedure SET_obu_types(
		this : in PTR_obu_speed_distance ;
		new_obu_types : obu_types.PTR_obu_types) is
	begin
		this.ref_obu_types := new_obu_types ;
	end SET_obu_types ;
	-- SEES obu_modes_procedures
	procedure SET_obu_modes_procedures(
		this : in PTR_obu_speed_distance ;
		new_obu_modes_procedures : obu_modes_procedures.PTR_obu_modes_procedures) is
	begin
		this.ref_obu_modes_procedures := new_obu_modes_procedures ;
	end SET_obu_modes_procedures ;
	procedure INITIALISATION(this : in PTR_obu_speed_distance) is
	begin
		if (this.initialisation = TRUE)
		then
			return ;
		end if ;
		this.initialisation := TRUE ;
		-- Initialisation of seen machines
		obu_types.INITIALISATION(this.ref_obu_types) ;
		obu_modes_procedures.INITIALISATION(this.ref_obu_modes_procedures) ;
	end INITIALISATION ;
	----------------
	-- OPERATIONS --
	----------------
	procedure #obu_speed_distance#manage_speed_distance(this : in
		PTR_obu_speed_distance) is
		#obu_speed_distance#manage_speed_distance#1#l_mode : obu_types_t_mode ;
	begin
		obu_modes_procedures.#obu_modes_procedures#get_mode(
			this.ref_obu_modes_procedures,
			#obu_speed_distance#manage_speed_distance#1#l_mode) ;
		case #obu_speed_distance#manage_speed_distance#1#l_mode is
			when #obu_types#FS | #obu_types#LS | #obu_types#OS =>
				-- §4.5.2 : These functions shall be active :
				-- Speed and Distance Monitoring based on MRSP, MA, release
				-- speed, gradient, mode profile, non protected LX start location, and
				-- route unsuitability location
				null ;
			when #obu_types#SR =>
				-- §4.5.2 : This function shall be active :
				-- Speed and Distance Monitoring based on MRSP
				null ;
			when #obu_types#UN =>
				-- §4.5.2 : This function shall be active :
				-- Speed and Distance Monitoring based on MRSP, allowed distance
				-- to run in Staff Resp. mode
				null ;
			when #obu_types#SH | #obu_types#SN | #obu_types#RV =>
				-- §4.5.2 : This function shall be active
				-- Ceiling Speed Monitoring only (no braking curve) based on MRSP 
				null ;
			when #obu_types#NP | #obu_types#SB | #obu_types#PS | #obu_types#SL
				| #obu_types#NL | #obu_types#TR | #obu_types#PT | #obu_types#SF |
				#obu_types#ISo =>
				-- §4.5.2 : This function shall be inactive in NP, SB, PS, SL, NL, TR, PT, SF, ISo modes
				null ;
			when others =>
				-- For defensive programming purpose a fault can be detect :
				-- If any of the other branch condition is true there is a trouble in the mode value.
				-- This branch shall be dead code.
				null ;
			end case ;
	end #obu_speed_distance#manage_speed_distance ;
	
end obu_speed_distance ;
